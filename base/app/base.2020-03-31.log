2020-03-31 15:22:12.983 [main] INFO  com.frozen.MemberApplication - No active profile set, falling back to default profiles: default
2020-03-31 15:22:14.140 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 15:22:14.141 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 15:22:14.251 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 15:22:16.786 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 15:22:16.786 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 15:22:16.793 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 15:22:16.794 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 15:22:16.846 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-31 15:22:16.846 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-31 15:22:16.847 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-31 15:22:16.847 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-03-31 15:22:17.150 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 15:22:17.792 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 15:22:17.792 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 15:22:17.857 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 15:22:17.857 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 15:22:18.124 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 15:22:18.581 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 15:22:18.791 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 15:22:18.792 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 15:22:18.793 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 15:22:18.795 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585639338795 with initial instances count: 0
2020-03-31 15:22:18.809 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585639338809, current=UP, previous=STARTING]
2020-03-31 15:22:18.810 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/DESKTOP-0OEU3E6:member-service:9001: registering service...
2020-03-31 15:22:18.823 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9001"]
2020-03-31 15:22:18.831 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9001"]
2020-03-31 15:22:18.839 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 15:22:18.855 [main] INFO  com.frozen.MemberApplication - Started MemberApplication in 7.943 seconds (JVM running for 9.131)
2020-03-31 15:22:18.881 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/DESKTOP-0OEU3E6:member-service:9001 - registration status: 204
2020-03-31 15:22:48.793 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 15:22:48.793 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 15:22:48.794 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 15:22:48.794 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 15:22:48.794 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 15:22:48.794 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-31 15:22:48.794 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 15:22:48.814 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 15:27:18.584 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 15:32:18.585 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:36:14.115 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:36:14.461 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
java.lang.IllegalStateException: Either 'name' or 'value' must be provided in @FeignClient
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getClientName(FeignClientsRegistrar.java:367)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:163)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:524)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:14.591 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3724af13: startup date [Tue Mar 31 22:36:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34e9fd99
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:417)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:14.591 [main] ERROR org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3724af13: startup date [Tue Mar 31 22:36:14 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34e9fd99
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:19.831 [main] INFO  com.frozen.MemberApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:36:21.194 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:36:21.195 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:36:21.303 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:36:24.814 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:36:24.814 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:36:24.817 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:36:24.817 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:36:24.869 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-03-31 22:36:24.869 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-03-31 22:36:24.870 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-03-31 22:36:24.870 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler - Clear EntityHelper entityTableMap cache.
2020-03-31 22:36:25.295 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 22:36:25.931 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 22:36:25.931 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 22:36:25.995 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 22:36:25.996 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 22:36:26.258 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 22:36:26.813 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 22:36:27.080 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 22:36:27.081 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 22:36:27.082 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 22:36:27.084 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585665387084 with initial instances count: 0
2020-03-31 22:36:27.099 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585665387099, current=UP, previous=STARTING]
2020-03-31 22:36:27.100 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:9001: registering service...
2020-03-31 22:36:27.111 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9001"]
2020-03-31 22:36:27.119 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9001"]
2020-03-31 22:36:27.126 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 22:36:27.143 [main] INFO  com.frozen.MemberApplication - Started MemberApplication in 11.68 seconds (JVM running for 12.859)
2020-03-31 22:36:27.191 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_MEMBER-SERVICE/localhost:member-service:9001 - registration status: 204
2020-03-31 22:36:46.941 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:36:47.581 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
java.lang.IllegalStateException: Either 'name' or 'value' must be provided in @FeignClient
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getClientName(FeignClientsRegistrar.java:367)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:163)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:524)
	at org.springframework.context.support.AbstractApplicationContext.jrLockAndRefresh(AbstractApplicationContext.java:40002)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41008)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:47.584 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38746343: startup date [Tue Mar 31 22:36:46 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b4cc473
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:417)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:47.587 [main] ERROR org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38746343: startup date [Tue Mar 31 22:36:46 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b4cc473
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: false
2020-03-31 22:36:57.082 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 22:36:57.103 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 22:37:48.063 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:37:48.583 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
java.lang.IllegalStateException: Either 'name' or 'value' must be provided in @FeignClient
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getClientName(FeignClientsRegistrar.java:367)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:163)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:524)
	at org.springframework.context.support.AbstractApplicationContext.jrLockAndRefresh(AbstractApplicationContext.java:40002)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41008)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:37:48.585 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15d9ba97: startup date [Tue Mar 31 22:37:48 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c790b46
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:417)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:37:48.586 [main] ERROR org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15d9ba97: startup date [Tue Mar 31 22:37:48 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c790b46
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:38:05.696 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:38:07.318 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:38:07.319 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:38:07.616 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:38:08.880 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberController': Unsatisfied dependency expressed through field 'memberCommService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
2020-03-31 22:38:08.884 [main] INFO  org.apache.catalina.core.StandardService - Stopping service Tomcat
2020-03-31 22:38:08.925 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberController': Unsatisfied dependency expressed through field 'memberCommService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:542)
	at org.springframework.context.support.AbstractApplicationContext.jrLockAndRefresh(AbstractApplicationContext.java:40002)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41008)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1275)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 21 common frames omitted
Caused by: java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at feign.Util.checkState(Util.java:128)
	at org.springframework.cloud.netflix.feign.annotation.RequestParamParameterProcessor.processArgument(RequestParamParameterProcessor.java:63)
	at org.springframework.cloud.netflix.feign.support.SpringMvcContract.processAnnotationsOnParameter(SpringMvcContract.java:238)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:107)
	at org.springframework.cloud.netflix.feign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:133)
	at feign.Contract$BaseContract.parseAndValidatateMetadata(Contract.java:64)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:146)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:53)
	at feign.Feign$Builder.target(Feign.java:209)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.target(HystrixTargeter.java:39)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:145)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:166)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 31 common frames omitted
2020-03-31 22:38:56.438 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:38:58.173 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:38:58.175 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:38:58.425 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:38:59.243 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberController': Unsatisfied dependency expressed through field 'memberCommService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
2020-03-31 22:38:59.247 [main] INFO  org.apache.catalina.core.StandardService - Stopping service Tomcat
2020-03-31 22:38:59.289 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberController': Unsatisfied dependency expressed through field 'memberCommService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:542)
	at org.springframework.context.support.AbstractApplicationContext.jrLockAndRefresh(AbstractApplicationContext.java:40002)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41008)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.frozen.pc.web.service.MemberCommFeignService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1275)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 21 common frames omitted
Caused by: java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0
	at feign.Util.checkState(Util.java:128)
	at org.springframework.cloud.netflix.feign.annotation.RequestParamParameterProcessor.processArgument(RequestParamParameterProcessor.java:63)
	at org.springframework.cloud.netflix.feign.support.SpringMvcContract.processAnnotationsOnParameter(SpringMvcContract.java:238)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:107)
	at org.springframework.cloud.netflix.feign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:133)
	at feign.Contract$BaseContract.parseAndValidatateMetadata(Contract.java:64)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:146)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:53)
	at feign.Feign$Builder.target(Feign.java:209)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.target(HystrixTargeter.java:39)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:145)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:166)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 31 common frames omitted
2020-03-31 22:41:26.815 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:42:15.989 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:42:17.620 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:42:17.621 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:42:17.880 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:42:21.352 [main] ERROR org.springframework.boot.bind.PropertiesConfigurationFactory - Properties configuration failed validation
2020-03-31 22:42:21.352 [main] ERROR org.springframework.boot.bind.PropertiesConfigurationFactory - Field error in object 'eureka.client' on field 'serviceUrl': rejected value [http://127.0.0.1:9000]; codes [typeMismatch.eureka.client.serviceUrl,typeMismatch.serviceUrl,typeMismatch.java.util.Map,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [eureka.client.serviceUrl,serviceUrl]; arguments []; default message [serviceUrl]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found]
2020-03-31 22:42:21.353 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaClientConfigBean': Could not bind properties to EurekaClientConfigBean (prefix=eureka.client, ignoreInvalidFields=false, ignoreUnknownFields=true, ignoreNestedProperties=false); nested exception is org.springframework.validation.BindException: org.springframework.boot.bind.RelaxedDataBinder$RelaxedBeanPropertyBindingResult: 1 errors
Field error in object 'eureka.client' on field 'serviceUrl': rejected value [http://127.0.0.1:9000]; codes [typeMismatch.eureka.client.serviceUrl,typeMismatch.serviceUrl,typeMismatch.java.util.Map,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [eureka.client.serviceUrl,serviceUrl]; arguments []; default message [serviceUrl]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found]
2020-03-31 22:42:21.357 [main] INFO  org.apache.catalina.core.StandardService - Stopping service Tomcat
2020-03-31 22:42:21.393 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target EurekaClientConfigBean(propertyResolver=StandardServletEnvironment {activeProfiles=[], defaultProfiles=[default], propertySources=[servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment,random,applicationConfig: [classpath:/application.yml],springCloudClientHostInfo,defaultProperties]}, enabled=true, transport=CloudEurekaTransportConfig(sessionedClientReconnectIntervalSeconds=1200, retryableClientQuarantineRefreshPercentage=0.66, bootstrapResolverRefreshIntervalSeconds=300, applicationsResolverDataStalenessThresholdSeconds=300, asyncResolverRefreshIntervalMs=300000, asyncResolverWarmUpTimeoutMs=5000, asyncExecutorThreadPoolSize=5, readClusterVip=null, writeClusterVip=null, bootstrapResolverForQuery=true, bootstrapResolverStrategy=null, applicationsResolverUseIp=false), registryFetchIntervalSeconds=30, instanceInfoReplicationIntervalSeconds=30, initialInstanceInfoReplicationIntervalSeconds=40, eurekaServiceUrlPollIntervalSeconds=300, proxyPort=null, proxyHost=null, proxyUserName=null, proxyPassword=null, eurekaServerReadTimeoutSeconds=8, eurekaServerConnectTimeoutSeconds=5, backupRegistryImpl=null, eurekaServerTotalConnections=200, eurekaServerTotalConnectionsPerHost=50, eurekaServerURLContext=null, eurekaServerPort=null, eurekaServerDNSName=null, region=us-east-1, eurekaConnectionIdleTimeoutSeconds=30, registryRefreshSingleVipAddress=null, heartbeatExecutorThreadPoolSize=2, heartbeatExecutorExponentialBackOffBound=10, cacheRefreshExecutorThreadPoolSize=2, cacheRefreshExecutorExponentialBackOffBound=10, serviceUrl={defaultZone=http://localhost:8761/eureka/}, gZipContent=true, useDnsForFetchingServiceUrls=false, registerWithEureka=true, preferSameZoneEureka=true, logDeltaDiff=false, disableDelta=false, fetchRemoteRegionsRegistry=null, availabilityZones={}, filterOnlyUpInstances=true, fetchRegistry=true, dollarReplacement=_-, escapeCharReplacement=__, allowRedirects=false, onDemandUpdateStatusChange=true, encoderName=null, decoderName=null, clientDataAccept=full) failed:

    Property: eureka.client.serviceUrl
    Value: http://127.0.0.1:9000
    Reason: Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found


Action:

Update your application's configuration

2020-03-31 22:43:46.074 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:43:47.507 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:43:47.507 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:43:47.733 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:43:50.985 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:43:50.985 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:43:50.990 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:43:50.990 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:43:51.257 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 22:43:51.371 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 22:43:51.371 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 22:43:51.513 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 22:43:51.513 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 22:43:51.854 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 22:43:52.321 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 22:43:52.490 [main] WARN  com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient - Request execution failure with status code 404; retrying on another server if available
2020-03-31 22:43:52.493 [main] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:225)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e0d0ca4a.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e0d0ca4a$$FastClassBySpringCGLIB$$1f16a444.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e0d0ca4a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:545)
	at org.springframework.context.support.AbstractApplicationContext.jrLockAndRefresh(AbstractApplicationContext.java:40002)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41008)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.frozen.ShopPcWebApplication.main(ShopPcWebApplication.java:16)
2020-03-31 22:43:52.493 [main] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2020-03-31 22:43:52.495 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 22:43:52.498 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 22:43:52.501 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585665832500 with initial instances count: 0
2020-03-31 22:43:52.530 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585665832530, current=UP, previous=STARTING]
2020-03-31 22:43:52.532 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 22:43:52.569 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 22:43:52.579 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 22:43:52.599 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 22:43:52.624 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 404
2020-03-31 22:43:52.642 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 11.573 seconds (JVM running for 16.877)
2020-03-31 22:44:14.837 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:44:16.614 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:44:16.615 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:44:16.885 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:44:20.813 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:44:20.814 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:44:20.819 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:44:20.819 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:44:21.237 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 22:44:21.345 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 22:44:21.345 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 22:44:21.494 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 22:44:21.495 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 22:44:21.905 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:44:22.369 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 22:44:22.370 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 22:44:22.632 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 22:44:22.633 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 22:44:22.636 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 22:44:22.639 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585665862639 with initial instances count: 1
2020-03-31 22:44:22.670 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585665862670, current=UP, previous=STARTING]
2020-03-31 22:44:22.672 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 22:44:22.712 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 22:44:22.724 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 22:44:22.724 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 22:44:22.747 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 22:44:22.791 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 13.118 seconds (JVM running for 18.457)
2020-03-31 22:44:33.218 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 22:44:59.536 [http-nio-80-exec-7] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: memberCommFeignService.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 22:44:59.555 [http-nio-80-exec-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-memberCommFeignService
2020-03-31 22:44:59.584 [http-nio-80-exec-7] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: memberCommFeignService instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=memberCommFeignService,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 22:44:59.594 [http-nio-80-exec-7] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 22:44:59.598 [http-nio-80-exec-7] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client memberCommFeignService initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=memberCommFeignService,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@439d4c8e
2020-03-31 22:44:59.843 [http-nio-80-exec-7] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: memberCommFeignService] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: memberCommFeignService
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy91.register(Unknown Source)
	at com.frozen.pc.web.controller.MemberController.register(MemberController.java:34)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-31 22:46:15.134 [http-nio-80-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: memberCommFeignService] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: memberCommFeignService
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy91.register(Unknown Source)
	at com.frozen.pc.web.controller.MemberController.register(MemberController.java:34)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-31 22:46:26.816 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:46:28.988 [Thread-58] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 22:46:28.997 [Thread-51] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585665988997, current=DOWN, previous=UP]
2020-03-31 22:46:28.998 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 22:46:28.998 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 22:46:28.999 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 22:46:29.007 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 22:46:29.008 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 22:46:29.022 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 22:46:29.031 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 22:46:29.033 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-memberCommFeignService
2020-03-31 22:46:29.033 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 22:46:29.035 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 22:46:41.197 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 22:46:42.772 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 22:46:42.773 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 22:46:43.027 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 22:46:46.565 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:46:46.565 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:46:46.573 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 22:46:46.573 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 22:46:46.966 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 22:46:47.072 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 22:46:47.072 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 22:46:47.225 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 22:46:47.225 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 22:46:47.642 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:46:48.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 22:46:48.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 22:46:48.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 22:46:48.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 22:46:48.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 22:46:48.111 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 22:46:48.111 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 22:46:48.423 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 22:46:48.425 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 22:46:48.429 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 22:46:48.433 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585666008433 with initial instances count: 1
2020-03-31 22:46:48.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585666008472, current=UP, previous=STARTING]
2020-03-31 22:46:48.475 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 22:46:48.530 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 22:46:48.542 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 22:46:48.553 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 22:46:48.565 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 22:46:48.613 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.579 seconds (JVM running for 18.409)
2020-03-31 22:46:52.601 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 22:47:11.420 [http-nio-80-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 22:47:11.439 [http-nio-80-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 22:47:11.469 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 22:47:11.477 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 22:47:11.507 [http-nio-80-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 22:47:11.509 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@27abbebb
2020-03-31 22:47:11.750 [http-nio-9001-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 22:47:11.790 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 22:47:11.790 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 22:47:11.790 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 22:47:11.791 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 22:47:11.791 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=q123456, password=1111111, phone=null, email=9280505432qq.com, created=null, updated=null, version=null, salt=null)]
2020-03-31 22:47:11.791 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 22:47:12.325 [http-nio-9001-exec-1] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-03-31 22:47:12.481 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 22:47:12.559 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.selectCountByExample - ==>  Preparing: SELECT COUNT(*) FROM mb_user WHERE ( ( username = ? or email = ? ) ) 
2020-03-31 22:47:12.572 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.selectCountByExample - ==> Parameters: q123456(String), 9280505432qq.com(String)
2020-03-31 22:47:12.591 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.selectCountByExample - <==      Total: 1
2020-03-31 22:47:12.593 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.insertSelective - ==>  Preparing: INSERT INTO mb_user ( id,username,password,email,salt ) VALUES( ?,?,?,?,? ) 
2020-03-31 22:47:12.594 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.insertSelective - ==> Parameters: null, q123456(String), 24D78C85426E34DE48B25041A4FC04B8(String), 9280505432qq.com(String), 3ab0579f619a4213bc09aeee3e0105da(String)
2020-03-31 22:47:12.598 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.insertSelective - <==    Updates: 1
2020-03-31 22:47:12.599 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.insertSelective!selectKey - ==>  Executing: SELECT LAST_INSERT_ID() 
2020-03-31 22:47:12.600 [http-nio-9001-exec-1] DEBUG com.frozen.member.mapper.UserMapper.insertSelective!selectKey - <==      Total: 1
2020-03-31 22:47:13.020 [http-nio-9001-exec-1] INFO  com.frozen.member.service.MemberCommServiceImpl - 推送成功
2020-03-31 22:47:13.021 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 22:47:13.023 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":200,"resMsg":"恭喜,注册成功!!"}
2020-03-31 22:47:13.023 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 22:50:15.551 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=q12345, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入密码"}
2020-03-31 22:50:15.552 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 22:50:15.601 [http-nio-80-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'timestamp' cannot be found on object of type 'java.util.HashMap' - maybe not public?] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'timestamp' cannot be found on object of type 'java.util.HashMap' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:224)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:81)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$ExpressionResolver.resolvePlaceholder(ErrorMvcAutoConfiguration.java:288)
	at org.springframework.boot.autoconfigure.web.NonRecursivePropertyPlaceholderHelper$NonRecursivePlaceholderResolver.resolvePlaceholder(NonRecursivePropertyPlaceholderHelper.java:56)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:147)
	at org.springframework.boot.autoconfigure.web.NonRecursivePropertyPlaceholderHelper.parseStringValue(NonRecursivePropertyPlaceholderHelper.java:38)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:226)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-03-31 22:51:26.818 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:51:48.115 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:56:26.820 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:56:48.117 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 22:57:29.947 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 22:57:29.947 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=q92805054, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入密码"}
2020-03-31 22:57:29.948 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 22:59:06.938 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:00:39.954 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:00:39.954 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:00:39.955 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:01:26.822 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:01:48.119 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:04:18.435 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:04:18.435 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 ####
2020-03-31 23:04:18.441 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:04:18.441 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:04:18.441 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:04:18.441 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:04:18.442 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:04:18.442 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:04:18.442 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:04:18.442 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:04:18.442 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:04:18.445 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:04:18.445 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:04:58.823 [http-nio-80-exec-7] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:04:58.823 [http-nio-80-exec-7] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 ####
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:04:58.827 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:04:58.829 [http-nio-80-exec-7] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:04:58.829 [http-nio-80-exec-7] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:05:19.563 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:05:19.563 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:05:19.568 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:05:19.568 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:05:19.568 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:05:19.570 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:05:19.572 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:05:19.572 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:05:57.394 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:05:57.394 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:05:57.397 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:05:57.398 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:05:57.398 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:06:26.824 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:06:48.121 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:06:53.658 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:06:53.658 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:06:53.663 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:06:53.667 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:06:53.667 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:09:55.101 [Thread-57] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:09:55.103 [Thread-50] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585667395103, current=DOWN, previous=UP]
2020-03-31 23:09:55.104 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:09:55.104 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:09:55.105 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:09:55.113 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:09:55.113 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:09:55.126 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:09:55.140 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:09:55.141 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:09:55.141 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:09:55.148 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:10:14.445 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:10:16.076 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:10:16.077 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:10:16.344 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:10:19.892 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:10:19.892 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:10:19.898 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:10:19.898 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:10:20.282 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:10:20.404 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:10:20.404 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:10:20.569 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:10:20.570 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:10:20.982 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:10:21.443 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:10:21.700 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:10:21.702 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:10:21.705 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:10:21.709 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585667421708 with initial instances count: 2
2020-03-31 23:10:21.737 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585667421737, current=UP, previous=STARTING]
2020-03-31 23:10:21.739 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:10:21.779 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:10:21.791 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:10:21.793 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:10:21.812 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:10:21.857 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.645 seconds (JVM running for 18.662)
2020-03-31 23:10:25.301 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:10:26.986 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:10:26.986 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:10:27.291 [http-nio-80-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:10:27.311 [http-nio-80-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:10:27.343 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 23:10:27.351 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 23:10:27.382 [http-nio-80-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:10:27.383 [http-nio-80-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@636ede25
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:10:27.578 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:10:27.609 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:10:27.610 [http-nio-80-exec-3] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:10:28.355 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:11:26.825 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:15:21.446 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:16:26.827 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:16:35.168 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:16:35.168 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:16:35.179 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:16:35.184 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:16:35.184 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:16:58.178 [Thread-58] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:16:58.183 [Thread-51] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585667818183, current=DOWN, previous=UP]
2020-03-31 23:16:58.183 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:16:58.183 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:16:58.185 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:16:58.192 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:16:58.194 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:16:58.207 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:16:58.218 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:16:58.219 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:16:58.219 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:16:58.223 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:17:12.755 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:17:14.371 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:17:14.372 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:17:14.646 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:17:18.131 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:17:18.131 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:17:18.137 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:17:18.137 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:17:18.524 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:17:18.648 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:17:18.648 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:17:18.844 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:17:18.844 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:17:19.282 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:17:19.765 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:17:19.766 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:17:20.046 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:17:20.048 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:17:20.051 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:17:20.054 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585667840054 with initial instances count: 1
2020-03-31 23:17:20.084 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585667840084, current=UP, previous=STARTING]
2020-03-31 23:17:20.086 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:17:20.128 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:17:20.143 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:17:20.143 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:17:20.164 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:17:20.208 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.84 seconds (JVM running for 18.596)
2020-03-31 23:17:20.516 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:17:20.606 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:17:20.606 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:17:20.924 [http-nio-80-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:17:20.945 [http-nio-80-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:17:20.976 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 23:17:20.985 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 23:17:21.016 [http-nio-80-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:17:21.018 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@677c5f1a
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:17:21.256 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:17:21.294 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:17:21.294 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:17:21.988 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:17:36.179 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:17:36.179 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:17:36.183 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:17:36.184 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:17:36.185 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:17:36.185 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:17:53.079 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:17:53.080 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:17:53.082 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:17:53.082 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:17:53.082 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:17:53.082 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:17:53.083 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:17:53.083 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:17:53.083 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:17:53.083 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:17:53.083 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:17:53.084 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:17:53.084 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:21:26.828 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:21:48.439 [Thread-54] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:21:48.442 [Thread-49] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668108442, current=DOWN, previous=UP]
2020-03-31 23:21:48.442 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:21:48.443 [Thread-49] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:21:48.444 [Thread-49] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:21:48.453 [Thread-49] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:21:48.453 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:21:48.464 [Thread-49] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:21:48.474 [Thread-49] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:21:48.476 [Thread-49] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:21:48.476 [Thread-49] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:21:48.477 [Thread-49] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:22:02.243 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:22:03.845 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:22:03.846 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:22:04.094 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:22:07.603 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:22:07.603 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:22:07.610 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:22:07.610 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:22:08.011 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:22:08.114 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:22:08.114 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:22:08.260 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:22:08.261 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:22:08.667 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:22:09.145 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:22:09.145 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:22:09.145 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:22:09.145 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:22:09.145 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:22:09.146 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:22:09.146 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:22:09.415 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:22:09.417 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:22:09.420 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:22:09.424 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585668129423 with initial instances count: 2
2020-03-31 23:22:09.456 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668129456, current=UP, previous=STARTING]
2020-03-31 23:22:09.458 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:22:09.501 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:22:09.515 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:22:09.515 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:22:09.538 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:22:09.597 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.483 seconds (JVM running for 18.081)
2020-03-31 23:22:17.678 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:22:17.756 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:22:17.756 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:22:18.037 [http-nio-80-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:22:18.058 [http-nio-80-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:22:18.091 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 23:22:18.099 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 23:22:18.129 [http-nio-80-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:22:18.131 [http-nio-80-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7c4a6636
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:22:18.331 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:22:18.364 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:22:18.364 [http-nio-80-exec-1] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:22:19.103 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:23:56.205 [Thread-57] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:23:56.209 [Thread-50] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668236209, current=DOWN, previous=UP]
2020-03-31 23:23:56.209 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:23:56.209 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:23:56.210 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:23:56.218 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:23:56.218 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:23:56.225 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:23:56.234 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:23:56.235 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:23:56.236 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:23:56.237 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:24:10.265 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:24:11.919 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:24:11.920 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:24:12.161 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:24:15.663 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:24:15.663 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:24:15.668 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:24:15.669 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:24:16.065 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:24:16.185 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:24:16.185 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:24:16.339 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:24:16.339 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:24:16.746 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:24:17.202 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:24:17.463 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:24:17.465 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:24:17.468 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:24:17.471 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585668257471 with initial instances count: 2
2020-03-31 23:24:17.500 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668257500, current=UP, previous=STARTING]
2020-03-31 23:24:17.502 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:24:17.543 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:24:17.555 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:24:17.555 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:24:17.575 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:24:17.619 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.45 seconds (JVM running for 18.083)
2020-03-31 23:24:34.278 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:24:43.489 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:24:43.489 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:24:43.780 [http-nio-80-exec-8] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:24:43.801 [http-nio-80-exec-8] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:24:43.834 [http-nio-80-exec-8] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 23:24:43.844 [http-nio-80-exec-8] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 23:24:43.876 [http-nio-80-exec-8] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:24:43.878 [http-nio-80-exec-8] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@156b6fa6
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:24:44.093 [http-nio-9001-exec-7] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:24:44.127 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:24:44.127 [http-nio-80-exec-8] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:24:44.850 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:25:59.483 [Thread-57] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:25:59.487 [Thread-50] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668359487, current=DOWN, previous=UP]
2020-03-31 23:25:59.488 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:25:59.488 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:25:59.489 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:25:59.495 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:25:59.497 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:25:59.503 [Thread-50] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:25:59.512 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:25:59.514 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:25:59.514 [Thread-50] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:25:59.517 [Thread-50] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:26:13.566 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:26:15.381 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:26:15.382 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:26:15.617 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:26:19.249 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:26:19.249 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:26:19.255 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:26:19.256 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:26:19.683 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:26:19.793 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:26:19.793 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:26:19.951 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:26:19.951 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:26:20.369 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:26:20.832 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:26:21.109 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:26:21.110 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:26:21.113 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:26:21.117 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585668381116 with initial instances count: 1
2020-03-31 23:26:21.149 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668381149, current=UP, previous=STARTING]
2020-03-31 23:26:21.151 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:26:21.194 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:26:21.207 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:26:21.209 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:26:21.230 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:26:21.283 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 12.854 seconds (JVM running for 18.149)
2020-03-31 23:26:21.357 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:26:26.829 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:26:44.836 [Thread-51] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668404836, current=DOWN, previous=UP]
2020-03-31 23:26:44.836 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:26:44.836 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:26:44.837 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:26:44.845 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:26:44.845 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:26:44.852 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:26:44.862 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:27:01.100 [main] INFO  com.frozen.ShopPcWebApplication - No active profile set, falling back to default profiles: default
2020-03-31 23:27:02.799 [main] INFO  org.apache.catalina.core.StandardService - Starting service Tomcat
2020-03-31 23:27:02.800 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-03-31 23:27:03.045 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-31 23:27:06.853 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:27:06.853 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:27:06.864 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2020-03-31 23:27:06.864 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-31 23:27:07.322 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2020-03-31 23:27:07.426 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2020-03-31 23:27:07.426 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2020-03-31 23:27:07.578 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2020-03-31 23:27:07.578 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2020-03-31 23:27:08.008 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2020-03-31 23:27:08.472 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2020-03-31 23:27:08.745 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2020-03-31 23:27:08.748 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2020-03-31 23:27:08.752 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-31 23:27:08.756 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1585668428756 with initial instances count: 2
2020-03-31 23:27:08.791 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585668428790, current=UP, previous=STARTING]
2020-03-31 23:27:08.794 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:27:08.839 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2020-03-31 23:27:08.852 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2020-03-31 23:27:08.860 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:27:08.878 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2020-03-31 23:27:08.931 [main] INFO  com.frozen.ShopPcWebApplication - Started ShopPcWebApplication in 13.049 seconds (JVM running for 18.286)
2020-03-31 23:27:09.112 [http-nio-80-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-03-31 23:28:52.536 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:28:52.537 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:28:52.820 [http-nio-80-exec-6] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:28:52.839 [http-nio-80-exec-6] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:28:52.869 [http-nio-80-exec-6] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: MEMBER-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-03-31 23:28:52.877 [http-nio-80-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2020-03-31 23:28:52.906 [http-nio-80-exec-6] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:28:52.908 [http-nio-80-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client MEMBER-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=MEMBER-SERVICE,current list of Servers=[localhost:9001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@293e562f
2020-03-31 23:28:53.106 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:28:53.106 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:28:53.106 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:28:53.106 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:28:53.106 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:28:53.107 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:28:53.107 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:28:53.107 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:28:53.107 [http-nio-9001-exec-5] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:28:53.140 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:28:53.140 [http-nio-80-exec-6] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:28:53.880 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: MEMBER-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-03-31 23:31:26.833 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:31:34.511 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:31:34.511 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:31:34.516 [http-nio-9001-exec-3] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:31:34.518 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:31:34.518 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:32:08.475 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:36:26.834 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:36:41.977 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:36:41.977 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:36:41.987 [http-nio-9001-exec-9] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:36:41.993 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:36:41.993 [http-nio-80-exec-9] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:37:04.577 [http-nio-80-exec-2] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:37:04.577 [http-nio-80-exec-2] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=q, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=q, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入密码"}
2020-03-31 23:37:04.580 [http-nio-9001-exec-1] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:37:04.582 [http-nio-80-exec-2] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:37:04.582 [http-nio-80-exec-2] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:37:08.476 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2020-03-31 23:37:08.778 [http-nio-80-exec-5] INFO  com.frozen.pc.web.controller.MemberController - ### 开始执行注册流程 ####
2020-03-31 23:37:08.779 [http-nio-80-exec-5] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务开始 user实体类UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)####
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - =start==============请求内容==============start=
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - 访问接口URLhttp://localhost:9001/api/member/register
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - 请求方式POST
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - 请求类方法ResponseDataEntity com.frozen.member.service.MemberCommServiceImpl.register(UserEntity)
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - 请求方法参数[UserEntity(id=null, username=, password=, phone=null, email=, created=null, updated=null, version=null, salt=null)]
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - =end==============请求内容==============end=
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - -start-------------返回内容---------------start-
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - Response内容:{"resCode":500,"resMsg":"请输入用户名"}
2020-03-31 23:37:08.785 [http-nio-9001-exec-4] INFO  com.frozen.service.LogAspectAspect - -end-------------返回内容---------------end-
2020-03-31 23:37:08.787 [http-nio-80-exec-5] INFO  com.frozen.pc.web.controller.MemberController - ### 调用注册服务结束 ####
2020-03-31 23:37:08.787 [http-nio-80-exec-5] INFO  com.frozen.pc.web.controller.MemberController - ### 执行注册流程结束 ####
2020-03-31 23:37:19.753 [Thread-58] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2020-03-31 23:37:19.760 [Thread-51] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1585669039760, current=DOWN, previous=UP]
2020-03-31 23:37:19.760 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80: registering service...
2020-03-31 23:37:19.760 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2020-03-31 23:37:19.762 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2020-03-31 23:37:19.772 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - deregister  status: 200
2020-03-31 23:37:19.772 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_PC-WEB/localhost:pc-web:80 - registration status: 204
2020-03-31 23:37:19.788 [Thread-51] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2020-03-31 23:37:19.801 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:37:19.802 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-MEMBER-SERVICE
2020-03-31 23:37:19.803 [Thread-51] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.__invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45009)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45012)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
2020-03-31 23:37:19.806 [Thread-51] WARN  org.springframework.context.annotation.AnnotationConfigApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:383)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:389)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:337)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:994)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.destroySingletons(AbstractBeanFactory.java:44004)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:928)
